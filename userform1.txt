' =================================================================================
' == GESTION DE L'ÉTAT (SAUVEGARDE ET CHARGEMENT) ==
' =================================================================================

Private Sub UserForm_Initialize()
    ' Se déclenche au chargement du formulaire.
    LoadTitlesFromFile
    LoadLibrariesFromServer
    LoadLastWorkSettings
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    ' Se déclenche juste avant la fermeture du formulaire.
    SaveCurrentWorkSettings
End Sub

Private Sub SaveCurrentWorkSettings()
    ' Sauvegarde les valeurs actuelles dans le fichier lastwork.txt.
    Dim fso As Object, fileStream As Object, filePath As String
    On Error GoTo ErrorHandler
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    filePath = ThisWorkbook.Path & "\parametres\lastwork.txt"
    
    Set fileStream = fso.CreateTextFile(filePath, True)
    fileStream.WriteLine Me.ComboBox1.text
    fileStream.WriteLine Me.Biblio.text
    fileStream.WriteLine GetSelectedPriceType()
    fileStream.Close
    
    Exit Sub
ErrorHandler:
    Debug.Print "Erreur lors de la sauvegarde de lastwork.txt: " & Err.Description
End Sub

Private Sub LoadLastWorkSettings()
    ' Lit le fichier lastwork.txt et applique les paramètres.
    Dim fso As Object, fileStream As Object, filePath As String
    Dim lastTitle As String, lastBiblio As String, lastPriceType As String
    On Error GoTo ErrorHandler
    
    Set fso = CreateObject("Scripting.FileSystemObject")
    filePath = ThisWorkbook.Path & "\parametres\lastwork.txt"
    
    If Not fso.FileExists(filePath) Then
        ToggleButton_moy.value = True
        Exit Sub
    End If
    
    Set fileStream = fso.OpenTextFile(filePath, 1)
    If Not fileStream.AtEndOfStream Then lastTitle = fileStream.ReadLine
    If Not fileStream.AtEndOfStream Then lastBiblio = fileStream.ReadLine
    If Not fileStream.AtEndOfStream Then lastPriceType = fileStream.ReadLine
    fileStream.Close
    
    SetComboBoxValue Me.ComboBox1, lastTitle
    SetComboBoxValue Me.Biblio, lastBiblio
    
    Select Case lastPriceType
        Case "Minimum": UpdatePriceTypeSelection "min"
        Case "Moyen": UpdatePriceTypeSelection "moy"
        Case "Maximum": UpdatePriceTypeSelection "max"
        Case Else: UpdatePriceTypeSelection "moy"
    End Select
    
    Exit Sub
ErrorHandler:
    Debug.Print "Erreur lors du chargement de lastwork.txt: " & Err.Description
    ToggleButton_moy.value = True
End Sub

Private Sub SetComboBoxValue(ByRef cb As MSForms.ComboBox, ByVal valueToSet As String)
    Dim i As Integer
    For i = 0 To cb.ListCount - 1
        If cb.List(i) = valueToSet Then
            cb.ListIndex = i
            Exit For
        End If
    Next i
End Sub

' =================================================================================
' == GESTION DES BOUTONS DE TYPE DE PRIX (TOGGLEBUTTONS) - CORRIGÉ ==
' =================================================================================

Private Sub ToggleButton_min_Click()
    UpdatePriceTypeSelection "min"
End Sub

Private Sub ToggleButton_moy_Click()
    UpdatePriceTypeSelection "moy"
End Sub

Private Sub ToggleButton_max_Click()
    UpdatePriceTypeSelection "max"
End Sub

' *** CORRIGÉ : Logique plus explicite pour garantir qu'un seul bouton est sélectionné ***
Private Sub UpdatePriceTypeSelection(ByVal selectedButton As String)
    ' Cette procédure garantit qu'un seul bouton bascule est actif à la fois.
    Select Case selectedButton
        Case "min"
            ' Si l'utilisateur clique sur le bouton déjà sélectionné, on le force à rester sélectionné.
            If Me.ToggleButton_min.value = False Then Me.ToggleButton_min.value = True
            Me.ToggleButton_moy.value = False
            Me.ToggleButton_max.value = False
        Case "moy"
            If Me.ToggleButton_moy.value = False Then Me.ToggleButton_moy.value = True
            Me.ToggleButton_min.value = False
            Me.ToggleButton_max.value = False
        Case "max"
            If Me.ToggleButton_max.value = False Then Me.ToggleButton_max.value = True
            Me.ToggleButton_min.value = False
            Me.ToggleButton_moy.value = False
    End Select
End Sub

' *** CORRIGÉ : Correction de l'erreur de syntaxe "Else sans If" ***
Public Function GetSelectedPriceType() As String
    If Me.ToggleButton_min.value = True Then
        GetSelectedPriceType = "Minimum"
    ElseIf Me.ToggleButton_moy.value = True Then
        GetSelectedPriceType = "Moyen"
    ElseIf Me.ToggleButton_max.value = True Then
        GetSelectedPriceType = "Maximum"
    Else
        ' Cas par défaut si aucun bouton n'est sélectionné
        GetSelectedPriceType = "Moyen"
    End If
End Function

' =================================================================================
' == AUTRES PROCÉDURES DU FORMULAIRE ==
' =================================================================================

Private Sub LoadTitlesFromFile()
    Dim fso As Object, fileStream As Object, filePath As String, lineFromFile As String
    Set fso = CreateObject("Scripting.FileSystemObject")
    filePath = ThisWorkbook.Path & "\parametres\title.txt"
    If fso.FileExists(filePath) Then
        Set fileStream = fso.OpenTextFile(filePath, 1)
        Me.ComboBox1.Clear
        Do While Not fileStream.AtEndOfStream
            lineFromFile = fileStream.ReadLine
            If Trim(lineFromFile) <> "" Then Me.ComboBox1.AddItem Trim(lineFromFile)
        Loop
        fileStream.Close
    Else
        MsgBox "Le fichier 'title.txt' est introuvable.", vbCritical, "Erreur Fichier"
    End If
End Sub

Private Sub LoadLibrariesFromServer()
    Dim http As Object, url As String, jsonResponse As String
    On Error GoTo ErrorHandler
    
    url = Module1.SERVER_BASE_URL & "/libraries"
    Debug.Print "--- Chargement des bibliothèques ---"
    Debug.Print "Tentative de connexion à: " & url
    
    Set http = CreateObject("MSXML2.XMLHTTP.6.0")
    http.Open "GET", url, False
    http.send
    
    Debug.Print "Statut de la réponse du serveur: " & http.Status
    
    If http.Status = 200 Then
        Dim stream As Object
        Set stream = CreateObject("ADODB.Stream")
        stream.Open
        stream.Type = 1 ' adTypeBinary
        stream.Write http.responseBody
        stream.Position = 0
        stream.Type = 2 ' adTypeText
        stream.Charset = "UTF-8"
        jsonResponse = stream.ReadText
        stream.Close
        
        Debug.Print "Réponse JSON brute: " & jsonResponse
        
        jsonResponse = Replace(jsonResponse, "[", "")
        jsonResponse = Replace(jsonResponse, "]", "")
        jsonResponse = Replace(jsonResponse, """", "")
        jsonResponse = Replace(jsonResponse, vbCrLf, "")
        jsonResponse = Replace(jsonResponse, vbLf, "")
        jsonResponse = Replace(jsonResponse, vbCr, "")
        
        Dim libraries() As String
        libraries = Split(jsonResponse, ",")
        
        Me.Biblio.Clear
        Dim lib As Variant
        For Each lib In libraries
            Dim cleanLibName As String
            cleanLibName = Trim(lib)
            If cleanLibName <> "" Then
                Me.Biblio.AddItem cleanLibName
                Debug.Print "Ajout de la bibliothèque: '" & cleanLibName & "'"
            End If
        Next lib
        Debug.Print "--- Chargement terminé ---"
    Else
        MsgBox "Impossible de charger la liste des bibliothèques. Statut: " & http.Status, vbCritical, "Erreur Serveur"
    End If
    
    Set http = Nothing
    Exit Sub
    
ErrorHandler:
    MsgBox "Erreur de connexion lors de la récupération des bibliothèques: " & Err.Description, vbCritical, "Erreur Connexion"
    Debug.Print "Erreur VBA dans LoadLibrariesFromServer: " & Err.Description
    Set http = Nothing
End Sub

Private Sub Titre_Click()
    If Me.ComboBox1.value = "" Then
        MsgBox "Veuillez sélectionner un titre dans la liste.", vbExclamation
        Exit Sub
    End If
    AjouterTitreOuvrage Me.ComboBox1.value
End Sub

Private Sub Total_Click()
    AjouterLigneTotal
End Sub

Private Sub RECAP_Click()
    CreerRecapitulatif
End Sub

